{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["axios","get","then","res","data","newObject","post","response","id","put","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","console","log","Footer","style","color","fontStyle","fontSize","Date","getFullYear","App","React","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","length","notesToShow","filter","map","key","find","n","changeNote","returnedNote","catch","err","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"2OAkBe,EAfA,WAEb,OADgBA,IAAMC,IAHR,UAICC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAalB,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,SAQsBD,GACrBH,MAAK,SAAAK,GAAQ,OAAIA,EAASH,SAQ5B,EALA,SAACI,EAAIH,GAElB,OADgBL,IAAMS,IAAN,UAbF,SAaE,YAAwBD,GAAMH,GAC/BH,MAAK,SAAAK,GAAQ,OAAIA,EAASH,SCH5BM,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCG3BK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,MAETC,QAAQC,IAAIF,GACL,yBAAKJ,UAAU,SAASI,KCSlBG,EAdA,WAMb,OACE,4BAAQC,MANU,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,wGAAyE,IAAIC,MAAOC,kBC2E3EC,EAhFH,WAAO,IAAD,EACUC,IAAMC,SAAS,IADzB,mBACTC,EADS,KACFC,EADE,OAEcH,IAAMC,SAAS,iBAF7B,mBAETG,EAFS,KAEAC,EAFA,OAGcL,IAAMC,UAAS,GAH7B,mBAGTK,EAHS,KAGAC,EAHA,OAIwBP,IAAMC,SAAS,MAJvC,mBAITO,EAJS,KAIKC,EAJL,KAMhBT,IAAMU,WAAU,WACdC,IAAqBvC,MAAK,SAAAwC,GACxBT,EAASS,QAEV,IAEHtB,QAAQC,IAAI,SAAUW,EAAMW,OAAQ,SAEpC,IAsCMC,EAAcR,EAAUJ,EAAQA,EAAMa,QAAO,SAAAlC,GAAI,OAAIA,EAAKG,aAWhE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASmB,IACvB,4BAAQrB,QAAS,kBAAMoB,GAAYD,KAAnC,QACQA,EAAU,YAAc,OAEhC,4BAfFQ,EAAYE,KAAI,SAAAnC,GAAI,OAClB,kBAAC,EAAD,CACEoC,IAAKpC,EAAKH,GACVG,KAAMA,EACNC,iBAAkB,kBA/BG,SAAAJ,GACzB,IAAMG,EAAOqB,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAEzC,KAAOA,KAChC0C,EAAU,eAAQvC,EAAR,CAAcG,WAAYH,EAAKG,YAE/C2B,EACUjC,EAAI0C,GACXhD,MAAK,SAAAiD,GACJlB,EAASD,EAAMc,KAAI,SAAAnC,GAAI,OAAKA,EAAKH,KAAOA,EAAKG,EAAOwC,SAErDC,OAAM,SAAAC,GACLd,EAAgB,SAAD,OACJ5B,EAAKK,QADD,sCAGfsC,YAAW,WACTf,EAAgB,QACf,KACHN,EAASD,EAAMa,QAAO,SAAAI,GAAC,OAAIA,EAAEzC,KAAOA,SAeZ+C,CAAmB5C,EAAKH,WAYlD,0BAAMgD,SAzDM,SAAAC,GACdA,EAAEC,iBACF,IAAMC,EAAa,CACjB3C,QAASkB,EACT0B,MAAM,IAAIjC,MAAOkC,cACjB/C,UAAWgD,KAAKC,SAAW,IAG7BtB,EAAmBkB,GAAYzD,MAAK,SAAAiD,GAClClB,EAASD,EAAMgC,OAAOb,IACtBhB,EAAW,SAgDT,2BAAO8B,MAAO/B,EAASgC,SAxBJ,SAAAT,GACvBrC,QAAQC,IAAIoC,EAAEU,OAAOF,OACrB9B,EAAWsB,EAAEU,OAAOF,UAuBhB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,QC3ENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0a1eae48.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(res => res.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  console.log(message);\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16,\n  };\n  return (\n    <footer style={footerStyle}>\n      <br />\n      <em>{`Note app, Department of Computer Science, University of Helsinki ${new Date().getFullYear()}`}</em>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport noteService from './services/notes';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  const [notes, setNotes] = React.useState([]);\n  const [newNote, setNewNote] = React.useState('a new note...');\n  const [showAll, setShowAll] = React.useState(true);\n  const [errorMessage, setErrorMessage] = React.useState(null);\n\n  React.useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  console.log('render', notes.length, 'notes');\n\n  const addNote = e => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      // id: notes.length + 1,\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changeNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changeNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n      })\n      .catch(err => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  const handleNoteChange = e => {\n    console.log(e.target.value);\n    setNewNote(e.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const rows = () =>\n    notesToShow.map(note => (\n      <Note\n        key={note.id}\n        note={note}\n        toggleImportance={() => toggleImportanceOf(note.id)}\n      />\n    ));\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <button onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all'}\n      </button>\n      <ul>{rows()}</ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import axios from 'axios';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}